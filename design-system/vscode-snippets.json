{
  "Preset Component": {
    "prefix": "preset-component",
    "body": [
      "'use client'",
      "",
      "import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'",
      "import { Button } from '@/components/ui/button'",
      "import { ${2:IconName} } from 'lucide-react'",
      "",
      "interface ${1:ComponentName}Props {",
      "  ${3:// Add props here}",
      "}",
      "",
      "export default function ${1:ComponentName}({ ${4:...props} }: ${1:ComponentName}Props) {",
      "  return (",
      "    <Card className=\"w-full\">",
      "      <CardHeader>",
      "        <CardTitle className=\"flex items-center gap-2\">",
      "          <${2:IconName} className=\"w-5 h-5 text-primary\" />",
      "          ${5:Component Title}",
      "        </CardTitle>",
      "        <CardDescription>",
      "          ${6:Component description}",
      "        </CardDescription>",
      "      </CardHeader>",
      "      <CardContent className=\"space-y-4\">",
      "        ${7:// Component content}",
      "      </CardContent>",
      "    </Card>",
      "  )",
      "}"
    ],
    "description": "Create a new Preset component with theme-aware styling"
  },
  
  "Preset Form": {
    "prefix": "preset-form",
    "body": [
      "'use client'",
      "",
      "import { useState } from 'react'",
      "import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'",
      "import { Button } from '@/components/ui/button'",
      "import { Input } from '@/components/ui/input'",
      "import { Label } from '@/components/ui/label'",
      "",
      "interface ${1:FormName}Props {",
      "  onSubmit: (data: FormData) => void",
      "  loading?: boolean",
      "}",
      "",
      "export default function ${1:FormName}({ onSubmit, loading = false }: ${1:FormName}Props) {",
      "  const [formData, setFormData] = useState({",
      "    ${2:// Add form fields}",
      "  })",
      "",
      "  const handleSubmit = (e: React.FormEvent) => {",
      "    e.preventDefault()",
      "    onSubmit(formData)",
      "  }",
      "",
      "  return (",
      "    <Card className=\"w-full max-w-2xl mx-auto\">",
      "      <CardHeader>",
      "        <CardTitle>${3:Form Title}</CardTitle>",
      "        <CardDescription>${4:Form description}</CardDescription>",
      "      </CardHeader>",
      "      <CardContent>",
      "        <form onSubmit={handleSubmit} className=\"space-y-6\">",
      "          ${5:// Form fields}",
      "          <div className=\"flex gap-3 pt-4\">",
      "            <Button ",
      "              type=\"submit\" ",
      "              disabled={loading}",
      "              className=\"bg-primary text-primary-foreground hover:bg-primary/90\"",
      "            >",
      "              {loading ? 'Saving...' : 'Save'}",
      "            </Button>",
      "            <Button ",
      "              type=\"button\" ",
      "              variant=\"outline\"",
      "              className=\"border-border hover:bg-muted\"",
      "            >",
      "              Cancel",
      "            </Button>",
      "          </div>",
      "        </form>",
      "      </CardContent>",
      "    </Card>",
      "  )",
      "}"
    ],
    "description": "Create a new Preset form with theme-aware styling"
  },
  
  "Preset List": {
    "prefix": "preset-list",
    "body": [
      "'use client'",
      "",
      "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'",
      "import { Button } from '@/components/ui/button'",
      "import { Badge } from '@/components/ui/badge'",
      "",
      "interface ${1:ListItem} {",
      "  id: string",
      "  title: string",
      "  description?: string",
      "  ${2:// Add other properties}",
      "}",
      "",
      "interface ${3:ListName}Props {",
      "  title: string",
      "  items: ${1:ListItem}[]",
      "  onItemClick?: (item: ${1:ListItem}) => void",
      "  emptyMessage?: string",
      "}",
      "",
      "export default function ${3:ListName}({ title, items, onItemClick, emptyMessage = \"No items found\" }: ${3:ListName}Props) {",
      "  if (items.length === 0) {",
      "    return (",
      "      <Card className=\"w-full\">",
      "        <CardHeader>",
      "          <CardTitle>{title}</CardTitle>",
      "        </CardHeader>",
      "        <CardContent>",
      "          <div className=\"text-center py-12\">",
      "            <div className=\"w-12 h-12 mx-auto mb-4 rounded-full bg-muted flex items-center justify-center\">",
      "              <span className=\"text-muted-foreground/50 text-2xl\">ðŸ“­</span>",
      "            </div>",
      "            <h3 className=\"text-lg font-medium text-foreground mb-2\">{emptyMessage}</h3>",
      "          </div>",
      "        </CardContent>",
      "      </Card>",
      "    )",
      "  }",
      "",
      "  return (",
      "    <Card className=\"w-full\">",
      "      <CardHeader>",
      "        <CardTitle className=\"flex items-center justify-between\">",
      "          <span>{title}</span>",
      "          <Badge variant=\"outline\" className=\"border-border\">",
      "            {items.length} items",
      "          </Badge>",
      "        </CardTitle>",
      "      </CardHeader>",
      "      <CardContent>",
      "        <div className=\"space-y-3\">",
      "          {items.map((item) => (",
      "            <div",
      "              key={item.id}",
      "              onClick={() => onItemClick?.(item)}",
      "              className=\"flex items-center gap-4 p-4 rounded-lg border border-border hover:bg-muted/50 transition-colors cursor-pointer\"",
      "            >",
      "              <div className=\"flex-1 min-w-0\">",
      "                <h4 className=\"font-medium text-foreground truncate\">{item.title}</h4>",
      "                {item.description && (",
      "                  <p className=\"text-sm text-muted-foreground truncate\">{item.description}</p>",
      "                )}",
      "              </div>",
      "            </div>",
      "          ))}",
      "        </div>",
      "      </CardContent>",
      "    </Card>",
      "  )",
      "}"
    ],
    "description": "Create a new Preset list component with theme-aware styling"
  },
  
  "Theme Classes": {
    "prefix": "theme",
    "body": [
      "// Background Colors",
      "bg-background        // Main page background",
      "bg-card             // Card backgrounds", 
      "bg-muted            // Subtle backgrounds",
      "bg-primary          // Primary actions",
      "bg-secondary        // Secondary actions",
      "bg-destructive      // Error/danger states",
      "bg-accent           // Accent highlights",
      "",
      "// Text Colors",
      "text-foreground        // Primary text",
      "text-muted-foreground  // Secondary text",
      "text-primary           // Primary accent text",
      "text-secondary         // Secondary accent text", 
      "text-destructive       // Error text",
      "text-card-foreground   // Text on cards",
      "",
      "// Border Colors",
      "border-border          // Default borders",
      "border-primary         // Primary borders",
      "border-destructive     // Error borders",
      "border-muted           // Subtle borders",
      "",
      "// Interactive States",
      "hover:bg-accent           // Hover backgrounds",
      "hover:text-foreground     // Hover text",
      "focus:ring-primary        // Focus rings",
      "active:bg-primary         // Active states"
    ],
    "description": "Show available theme-aware CSS classes"
  }
}
