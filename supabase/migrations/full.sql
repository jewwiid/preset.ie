-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.api_providers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL UNIQUE,
  base_url text NOT NULL,
  api_key_encrypted text NOT NULL,
  cost_per_request numeric NOT NULL,
  rate_limit_per_minute integer DEFAULT 60,
  priority integer DEFAULT 1,
  is_active boolean DEFAULT true,
  health_check_url text,
  last_health_check timestamp with time zone,
  success_rate_24h numeric DEFAULT 100.00,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT api_providers_pkey PRIMARY KEY (id)
);
CREATE TABLE public.applications (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  gig_id uuid NOT NULL,
  applicant_user_id uuid NOT NULL,
  note text,
  status USER-DEFINED DEFAULT 'PENDING'::application_status,
  applied_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT applications_pkey PRIMARY KEY (id),
  CONSTRAINT applications_applicant_user_id_fkey FOREIGN KEY (applicant_user_id) REFERENCES public.users_profile(id),
  CONSTRAINT applications_gig_id_fkey FOREIGN KEY (gig_id) REFERENCES public.gigs(id)
);
CREATE TABLE public.credit_alerts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  alert_type character varying NOT NULL,
  threshold_value numeric,
  notification_channels ARRAY,
  is_active boolean DEFAULT true,
  last_triggered_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT credit_alerts_pkey PRIMARY KEY (id)
);
CREATE TABLE public.credit_pools (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  provider character varying NOT NULL UNIQUE,
  total_purchased numeric DEFAULT 0,
  total_consumed numeric DEFAULT 0,
  available_balance numeric DEFAULT 0,
  cost_per_credit numeric NOT NULL,
  last_refill_at timestamp with time zone,
  auto_refill_threshold numeric DEFAULT 100,
  auto_refill_amount numeric DEFAULT 500,
  status character varying DEFAULT 'active'::character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT credit_pools_pkey PRIMARY KEY (id)
);
CREATE TABLE public.credit_purchase_requests (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  provider character varying NOT NULL,
  amount_requested numeric NOT NULL,
  estimated_cost numeric NOT NULL,
  status character varying DEFAULT 'pending_manual_approval'::character varying,
  approved_by uuid,
  approved_at timestamp with time zone,
  transaction_id character varying,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT credit_purchase_requests_pkey PRIMARY KEY (id),
  CONSTRAINT credit_purchase_requests_approved_by_fkey FOREIGN KEY (approved_by) REFERENCES auth.users(id)
);
CREATE TABLE public.credit_transactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  moodboard_id uuid,
  transaction_type character varying NOT NULL,
  credits_used integer NOT NULL,
  cost_usd numeric,
  provider character varying,
  api_request_id character varying,
  enhancement_type character varying,
  status character varying DEFAULT 'completed'::character varying,
  error_message text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT credit_transactions_pkey PRIMARY KEY (id),
  CONSTRAINT credit_transactions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT credit_transactions_moodboard_id_fkey FOREIGN KEY (moodboard_id) REFERENCES public.moodboards(id)
);
CREATE TABLE public.daily_usage_summary (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  date date NOT NULL UNIQUE,
  total_requests integer DEFAULT 0,
  successful_requests integer DEFAULT 0,
  failed_requests integer DEFAULT 0,
  total_credits_consumed integer DEFAULT 0,
  total_cost_usd numeric DEFAULT 0,
  free_tier_usage integer DEFAULT 0,
  plus_tier_usage integer DEFAULT 0,
  pro_tier_usage integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT daily_usage_summary_pkey PRIMARY KEY (id)
);
CREATE TABLE public.domain_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  aggregate_id character varying NOT NULL,
  event_type character varying NOT NULL,
  payload jsonb NOT NULL,
  metadata jsonb,
  occurred_at timestamp with time zone NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT domain_events_pkey PRIMARY KEY (id)
);
CREATE TABLE public.gigs (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  owner_user_id uuid NOT NULL,
  title character varying NOT NULL,
  description text NOT NULL,
  comp_type USER-DEFINED NOT NULL,
  comp_details text,
  location_text character varying NOT NULL,
  location USER-DEFINED,
  radius_meters integer,
  start_time timestamp with time zone NOT NULL,
  end_time timestamp with time zone NOT NULL,
  application_deadline timestamp with time zone NOT NULL,
  max_applicants integer NOT NULL DEFAULT 20,
  usage_rights text NOT NULL,
  safety_notes text,
  status USER-DEFINED DEFAULT 'DRAFT'::gig_status,
  boost_level integer DEFAULT 0 CHECK (boost_level >= 0),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  purpose text,
  CONSTRAINT gigs_pkey PRIMARY KEY (id),
  CONSTRAINT gigs_owner_user_id_fkey FOREIGN KEY (owner_user_id) REFERENCES public.users_profile(id)
);
CREATE TABLE public.media (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  owner_user_id uuid NOT NULL,
  gig_id uuid,
  type USER-DEFINED NOT NULL,
  bucket character varying NOT NULL,
  path text NOT NULL,
  width integer,
  height integer,
  duration integer,
  palette jsonb,
  blurhash character varying,
  exif_json jsonb,
  visibility USER-DEFINED DEFAULT 'PRIVATE'::showcase_visibility,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT media_pkey PRIMARY KEY (id),
  CONSTRAINT media_owner_user_id_fkey FOREIGN KEY (owner_user_id) REFERENCES public.users_profile(id),
  CONSTRAINT media_gig_id_fkey FOREIGN KEY (gig_id) REFERENCES public.gigs(id)
);
CREATE TABLE public.messages (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  gig_id uuid NOT NULL,
  from_user_id uuid NOT NULL,
  to_user_id uuid NOT NULL,
  body text NOT NULL,
  attachments jsonb DEFAULT '[]'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  read_at timestamp with time zone,
  CONSTRAINT messages_pkey PRIMARY KEY (id),
  CONSTRAINT messages_to_user_id_fkey FOREIGN KEY (to_user_id) REFERENCES public.users_profile(id),
  CONSTRAINT messages_gig_id_fkey FOREIGN KEY (gig_id) REFERENCES public.gigs(id),
  CONSTRAINT messages_from_user_id_fkey FOREIGN KEY (from_user_id) REFERENCES public.users_profile(id)
);
CREATE TABLE public.moderation_actions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  admin_user_id uuid NOT NULL,
  target_user_id uuid,
  target_content_id uuid,
  content_type text CHECK (content_type = ANY (ARRAY['user'::text, 'gig'::text, 'showcase'::text, 'message'::text, 'image'::text, 'moodboard'::text])),
  action_type text NOT NULL CHECK (action_type = ANY (ARRAY['warning'::text, 'suspend'::text, 'ban'::text, 'unban'::text, 'content_remove'::text, 'shadowban'::text, 'unshadowban'::text, 'verify'::text, 'unverify'::text])),
  reason text NOT NULL,
  duration_hours integer,
  expires_at timestamp with time zone,
  report_id uuid,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  revoked_at timestamp with time zone,
  revoked_by uuid,
  revoke_reason text,
  CONSTRAINT moderation_actions_pkey PRIMARY KEY (id),
  CONSTRAINT moderation_actions_report_id_fkey FOREIGN KEY (report_id) REFERENCES public.reports(id),
  CONSTRAINT moderation_actions_target_user_id_fkey FOREIGN KEY (target_user_id) REFERENCES auth.users(id),
  CONSTRAINT moderation_actions_revoked_by_fkey FOREIGN KEY (revoked_by) REFERENCES auth.users(id),
  CONSTRAINT moderation_actions_admin_user_id_fkey FOREIGN KEY (admin_user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.moodboard_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  moodboard_id uuid,
  source character varying NOT NULL CHECK (source::text = ANY (ARRAY['pexels'::character varying, 'user-upload'::character varying, 'ai-enhanced'::character varying, 'ai-generated'::character varying]::text[])),
  url text NOT NULL,
  thumbnail_url text,
  attribution text,
  width integer,
  height integer,
  palette ARRAY DEFAULT '{}'::text[],
  blurhash character varying,
  enhancement_prompt text,
  original_image_id uuid,
  position integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT moodboard_items_pkey PRIMARY KEY (id),
  CONSTRAINT moodboard_items_moodboard_id_fkey FOREIGN KEY (moodboard_id) REFERENCES public.moodboards(id)
);
CREATE TABLE public.moodboards (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  gig_id uuid NOT NULL,
  owner_user_id uuid NOT NULL,
  title character varying,
  summary text,
  palette jsonb,
  items jsonb NOT NULL DEFAULT '[]'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  is_public boolean DEFAULT false,
  source_breakdown jsonb DEFAULT '{"pexels": 0, "ai_enhanced": 0, "ai_generated": 0, "user_uploads": 0}'::jsonb,
  enhancement_log jsonb DEFAULT '[]'::jsonb,
  total_cost numeric DEFAULT 0,
  generated_prompts ARRAY DEFAULT '{}'::text[],
  ai_provider character varying,
  vibe_summary text,
  mood_descriptors ARRAY DEFAULT '{}'::text[],
  tags ARRAY DEFAULT '{}'::text[],
  ai_analysis_status character varying DEFAULT 'pending'::character varying,
  ai_analyzed_at timestamp with time zone,
  CONSTRAINT moodboards_pkey PRIMARY KEY (id),
  CONSTRAINT moodboards_owner_user_id_fkey FOREIGN KEY (owner_user_id) REFERENCES public.users_profile(id),
  CONSTRAINT moodboards_gig_id_fkey FOREIGN KEY (gig_id) REFERENCES public.gigs(id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  handle character varying NOT NULL UNIQUE CHECK (handle::text ~ '^[a-z0-9_]{3,50}$'::text),
  display_name character varying NOT NULL,
  avatar_url text,
  bio text,
  city character varying,
  style_tags ARRAY DEFAULT '{}'::text[],
  showcase_ids ARRAY DEFAULT '{}'::text[],
  website_url text,
  instagram_handle character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.reports (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  reporter_user_id uuid NOT NULL,
  reported_user_id uuid,
  reported_content_id uuid,
  content_type text NOT NULL CHECK (content_type = ANY (ARRAY['user'::text, 'gig'::text, 'showcase'::text, 'message'::text, 'image'::text, 'moodboard'::text])),
  reason text NOT NULL CHECK (reason = ANY (ARRAY['spam'::text, 'inappropriate'::text, 'harassment'::text, 'scam'::text, 'copyright'::text, 'other'::text, 'underage'::text, 'safety'::text])),
  description text NOT NULL,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'reviewing'::text, 'resolved'::text, 'dismissed'::text])),
  priority text DEFAULT 'medium'::text CHECK (priority = ANY (ARRAY['low'::text, 'medium'::text, 'high'::text, 'critical'::text])),
  resolved_by uuid,
  resolution_notes text,
  resolution_action text CHECK (resolution_action = ANY (ARRAY['warning'::text, 'content_removed'::text, 'user_suspended'::text, 'user_banned'::text, 'dismissed'::text, 'no_action'::text])),
  evidence_urls ARRAY,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  resolved_at timestamp with time zone,
  CONSTRAINT reports_pkey PRIMARY KEY (id),
  CONSTRAINT reports_reporter_user_id_fkey FOREIGN KEY (reporter_user_id) REFERENCES auth.users(id),
  CONSTRAINT reports_reported_user_id_fkey FOREIGN KEY (reported_user_id) REFERENCES auth.users(id),
  CONSTRAINT reports_resolved_by_fkey FOREIGN KEY (resolved_by) REFERENCES auth.users(id)
);
CREATE TABLE public.reviews (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  gig_id uuid NOT NULL,
  reviewer_user_id uuid NOT NULL,
  reviewed_user_id uuid NOT NULL,
  rating integer NOT NULL CHECK (rating >= 1 AND rating <= 5),
  tags ARRAY DEFAULT '{}'::text[],
  comment text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT reviews_pkey PRIMARY KEY (id),
  CONSTRAINT reviews_reviewer_user_id_fkey FOREIGN KEY (reviewer_user_id) REFERENCES public.users_profile(id),
  CONSTRAINT reviews_gig_id_fkey FOREIGN KEY (gig_id) REFERENCES public.gigs(id),
  CONSTRAINT reviews_reviewed_user_id_fkey FOREIGN KEY (reviewed_user_id) REFERENCES public.users_profile(id)
);
CREATE TABLE public.showcases (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  gig_id uuid NOT NULL,
  creator_user_id uuid NOT NULL,
  talent_user_id uuid NOT NULL,
  media_ids ARRAY NOT NULL CHECK (array_length(media_ids, 1) >= 3 AND array_length(media_ids, 1) <= 6),
  caption text,
  tags ARRAY DEFAULT '{}'::text[],
  palette jsonb,
  approved_by_creator_at timestamp with time zone,
  approved_by_talent_at timestamp with time zone,
  visibility USER-DEFINED DEFAULT 'DRAFT'::showcase_visibility,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT showcases_pkey PRIMARY KEY (id),
  CONSTRAINT showcases_talent_user_id_fkey FOREIGN KEY (talent_user_id) REFERENCES public.users_profile(id),
  CONSTRAINT showcases_creator_user_id_fkey FOREIGN KEY (creator_user_id) REFERENCES public.users_profile(id),
  CONSTRAINT showcases_gig_id_fkey FOREIGN KEY (gig_id) REFERENCES public.gigs(id)
);
CREATE TABLE public.spatial_ref_sys (
  srid integer NOT NULL CHECK (srid > 0 AND srid <= 998999),
  auth_name character varying,
  auth_srid integer,
  srtext character varying,
  proj4text character varying,
  CONSTRAINT spatial_ref_sys_pkey PRIMARY KEY (srid)
);
CREATE TABLE public.subscription_tiers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL UNIQUE,
  display_name character varying NOT NULL,
  max_moodboards_per_day integer NOT NULL DEFAULT 3,
  max_user_uploads integer NOT NULL DEFAULT 0,
  max_ai_enhancements integer NOT NULL DEFAULT 0,
  ai_cost_per_enhancement numeric DEFAULT 0.025,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT subscription_tiers_pkey PRIMARY KEY (id)
);
CREATE TABLE public.subscriptions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  stripe_customer_id character varying UNIQUE,
  stripe_subscription_id character varying UNIQUE,
  tier USER-DEFINED NOT NULL,
  status USER-DEFINED NOT NULL,
  started_at timestamp with time zone NOT NULL,
  expires_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT subscriptions_pkey PRIMARY KEY (id),
  CONSTRAINT subscriptions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users_profile(id)
);
CREATE TABLE public.system_alerts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  type character varying NOT NULL,
  level character varying NOT NULL,
  message text NOT NULL,
  metadata jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT system_alerts_pkey PRIMARY KEY (id)
);
CREATE TABLE public.user_credits (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid UNIQUE,
  subscription_tier character varying NOT NULL,
  monthly_allowance integer DEFAULT 0,
  current_balance integer DEFAULT 0,
  consumed_this_month integer DEFAULT 0,
  last_reset_at timestamp with time zone DEFAULT date_trunc('month'::text, now()),
  lifetime_consumed integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_credits_pkey PRIMARY KEY (id),
  CONSTRAINT user_credits_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_violations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  violation_type text NOT NULL,
  severity text NOT NULL CHECK (severity = ANY (ARRAY['minor'::text, 'moderate'::text, 'severe'::text, 'critical'::text])),
  report_id uuid,
  moderation_action_id uuid,
  description text NOT NULL,
  evidence_urls ARRAY,
  created_at timestamp with time zone DEFAULT now(),
  expires_at timestamp with time zone,
  CONSTRAINT user_violations_pkey PRIMARY KEY (id),
  CONSTRAINT user_violations_moderation_action_id_fkey FOREIGN KEY (moderation_action_id) REFERENCES public.moderation_actions(id),
  CONSTRAINT user_violations_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT user_violations_report_id_fkey FOREIGN KEY (report_id) REFERENCES public.reports(id)
);
CREATE TABLE public.users (
  id uuid NOT NULL,
  email character varying NOT NULL UNIQUE,
  role USER-DEFINED NOT NULL DEFAULT 'TALENT'::user_role,
  subscription_tier USER-DEFINED NOT NULL DEFAULT 'FREE'::subscription_tier,
  subscription_expires_at timestamp with time zone,
  stripe_customer_id character varying,
  stripe_subscription_id character varying,
  verification_status USER-DEFINED NOT NULL DEFAULT 'UNVERIFIED'::verification_status,
  email_verified_at timestamp with time zone,
  id_verified_at timestamp with time zone,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT users_pkey PRIMARY KEY (id),
  CONSTRAINT users_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.users_profile (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  display_name character varying NOT NULL,
  handle character varying NOT NULL UNIQUE CHECK (handle::text ~ '^[a-z0-9_]+$'::text),
  avatar_url text,
  bio text,
  city character varying,
  role_flags ARRAY DEFAULT '{}'::user_role[],
  style_tags ARRAY DEFAULT '{}'::text[],
  subscription_tier USER-DEFINED DEFAULT 'FREE'::subscription_tier,
  subscription_status USER-DEFINED DEFAULT 'ACTIVE'::subscription_status,
  subscription_started_at timestamp with time zone DEFAULT now(),
  subscription_expires_at timestamp with time zone,
  verified_id boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  date_of_birth date,
  CONSTRAINT users_profile_pkey PRIMARY KEY (id),
  CONSTRAINT users_profile_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.verification_badges (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  badge_type text NOT NULL CHECK (badge_type = ANY (ARRAY['verified_identity'::text, 'verified_professional'::text, 'verified_business'::text])),
  verification_request_id uuid,
  issued_by uuid NOT NULL,
  issued_at timestamp with time zone DEFAULT now(),
  expires_at timestamp with time zone,
  revoked_at timestamp with time zone,
  revoked_by uuid,
  revoke_reason text,
  CONSTRAINT verification_badges_pkey PRIMARY KEY (id),
  CONSTRAINT verification_badges_issued_by_fkey FOREIGN KEY (issued_by) REFERENCES auth.users(id),
  CONSTRAINT verification_badges_revoked_by_fkey FOREIGN KEY (revoked_by) REFERENCES auth.users(id),
  CONSTRAINT verification_badges_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT verification_badges_verification_request_id_fkey FOREIGN KEY (verification_request_id) REFERENCES public.verification_requests(id)
);
CREATE TABLE public.verification_requests (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  verification_type text NOT NULL CHECK (verification_type = ANY (ARRAY['identity'::text, 'professional'::text, 'business'::text])),
  document_urls ARRAY NOT NULL,
  document_types ARRAY NOT NULL,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'reviewing'::text, 'approved'::text, 'rejected'::text, 'expired'::text, 'additional_info_required'::text])),
  reviewed_by uuid,
  review_notes text,
  rejection_reason text,
  additional_info_request text,
  metadata jsonb DEFAULT '{}'::jsonb,
  submitted_at timestamp with time zone DEFAULT now(),
  reviewed_at timestamp with time zone,
  expires_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT verification_requests_pkey PRIMARY KEY (id),
  CONSTRAINT verification_requests_reviewed_by_fkey FOREIGN KEY (reviewed_by) REFERENCES auth.users(id),
  CONSTRAINT verification_requests_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.violation_thresholds (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  violation_count integer NOT NULL UNIQUE,
  action_type text NOT NULL CHECK (action_type = ANY (ARRAY['warning'::text, 'suspend_24h'::text, 'suspend_7d'::text, 'suspend_30d'::text, 'ban'::text])),
  severity_threshold text NOT NULL CHECK (severity_threshold = ANY (ARRAY['minor'::text, 'moderate'::text, 'severe'::text, 'critical'::text])),
  auto_apply boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT violation_thresholds_pkey PRIMARY KEY (id)
);